dev = qml.device("default.qubit", wires=1)

@qml.qnode(dev)
def evolve_rotation(B, time):
    """Simulates an electron (initial state |0>) in a magnetic field, using a 
    Z rotation.
    
    Args:
        B (float): The strength of the field, assumed to point in the z direction.
        time (float): The time we evolve the electron state for.

    Returns:
        array[complex]: The state of the system after evolution.
    """
    e = 1.6e-19
    m_e = 9.1e-31
    alpha = B*e/(2*m_e)
    ##################
    # YOUR CODE HERE #
    U = np.array([[0+0j, 0], [0, 0+0j]])
    U[0][0] = np.exp(alpha*time*1j)
    U[1][1] = np.exp(alpha*time*-1j)
    state = qml.QubitUnitary(U, wires=0)
    ##################
    return qml.state()
